<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Career | Kerri Miller]]></title>
  <link href="http://kerrizor.com/blog/categories/career/atom.xml" rel="self"/>
  <link href="http://kerrizor.com/"/>
  <updated>2015-05-30T21:55:42-04:00</updated>
  <id>http://kerrizor.com/</id>
  <author>
    <name><![CDATA[Kerri Miller]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[My Technical Origin Story]]></title>
    <link href="http://kerrizor.com/blog/2015/01/18/my-technical-origin-story/"/>
    <updated>2015-01-18T13:21:41-05:00</updated>
    <id>http://kerrizor.com/blog/2015/01/18/my-technical-origin-story</id>
    <content type="html"><![CDATA[<p>I didn&rsquo;t have any idea I would ever do anything with computers until after I left college. <!-- more -->I was a Theater major.. well, Performance Production, to be exact. I specialized in set and lighting design for dance, spending hours on top of a ladder with a wrench. After my junior year of college, I took the proverbial Year Off and started working full-time as a stage hand with the local branch of IATSE (the stagehand&rsquo;s union), eventually landing a role as Technical Director of a regional opera house, supplementing slow periods with working in the office, helping them manage subscriber databases; one of my first paid software gigs was building them a visual &ldquo;map&rdquo; of the theater and all its seats in Access, so you could see which seats were available, click on a seat.. er, cell.. and see which patron had that ticket, when we&rsquo;d last mailed them, were they season ticket holders, etc..</p>

<p>Ah, MS Access&hellip; Ah, the 90&rsquo;s&hellip;</p>

<p>Anyway, the thing about working in a stage hand in Northern Vermont is that everything is so damn pretty.. and legally has to stay that way. No, seriously &mdash; there are state laws that restrict new development and modifications to buildings more than N years old unless they&rsquo;re aesthetically pleasing (according to a committee)  In a state that bases its economy on tourism, this makes a lot of sense. Unfortunately, its means that almost all the theaters in a 2 hour radius lack that most simple of modern conveniences: air conditioning. Not a huge problem, except the 6 weeks every summer when it hits the mid 90&rsquo;s in both temperature and humidity in New England, and did I mention these are usually massive brick buildings? Essentially they turn into pizza ovens.. so in the summer time, theaters shut down. Now, if you&rsquo;re an enterprising stage hand, you do what I did &ndash; get a second job in the theater office, line up some tours, rock festivals, etc. One good rock festival would pay for your entire summer (god bless overtime pay!)</p>

<p>However, this summer, the theater I worked at had a teensy-weensy embezzlement incident, leading to closing the office so the forensic accountants could untangle what exactly the Executive Director had done before quietly slipping out of state one night.. and several big festivals and tours failed to materialize that year, so there wasn&rsquo;t a lot of extra work for stage hands in New England &mdash; especially those who had just made Journeyman and were at the absolute bottom of the union&rsquo;s call sheet.</p>

<p>So I did what you did in the 90&rsquo;s. Back then, kids, Craigslist was a printed sheet of paper that was delivered to your door every morning, hyper-localized for where you live &ndash; as a service! As I scrolled, or as we use to say, &ldquo;thumbed&rdquo; through the job listings, one caught my eye, for a &ldquo;Webmaster&rdquo; job. &ldquo;Hell, I know what the Web is! I should apply..&rdquo; After all, I&rsquo;d had a modem back in the BBS days, and I played a lot of MUSHes in my spare time, hung out on IRC, and had even built a crude web site for the theater, so obviously I was qualified&hellip;</p>

<p>I called and the person I spoke to (my later boss) told me that they had a stack of applications, but I was welcome to drop mine off. I think I surprised them by showing up 15 minutes later with a printed resume.</p>

<p>2 days later, I got the call &ndash; without even an interview, the job was mine, if I wanted it. Turns out that of the 50 or so applicants, I was the only one who&rsquo;d even /heard/ of the &ldquo;World Wide Web&rdquo; &ndash; let alone dabbled in HTML. I rushed to the nearest Borders Bookstore, bought myself a &ldquo;Teach Yourself HTML In 24 Hours&rdquo;, and crammed all weekend.</p>

<p>Since that first Monday, I&rsquo;ve spent nearly every day scrambling to learn as much as I can, just in case. Most days, I can&rsquo;t believe my good fortune and privilege to have been at the right place at the right time in history. Not everyone gets a chance to be lucky like that, and I don&rsquo;t ever want to take it for granted, or fail to pay it back with interest.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Practice Makes Perfect]]></title>
    <link href="http://kerrizor.com/blog/2013/08/02/practice-makes-perfect/"/>
    <updated>2013-08-02T14:58:00-04:00</updated>
    <id>http://kerrizor.com/blog/2013/08/02/practice-makes-perfect</id>
    <content type="html"><![CDATA[<p><em>This post originally appeared on the <a href="http://www.bluebox.net/about/blog/2012/06/practice-make-perfect/">Blue Box blog</a></em></p>

<p>Contrary to popular belief, there is no such thing as “on the job training.” The skills that differentiate senior and lead developers from the herd don’t come from sheer number hours spent simply doing the job. You will pick up a lot of exposure to concepts, techniques, and processes that way, but without focused, deliberate practice, you’re just spinning your wheels.</p>

<!-- more -->


<p>When you’re working, the goals are to accomplish the task, avoid failure, and get things done. Space to truly engage in learning is incidental. You are in the closed mode; “don’t distract me, I’m on a mission!” Practice, on the other hand, is about working on a problem with the idea of exploring the problem area, of learning something, and your goal, oddly enough, is to Deliberately Fail.</p>

<p>At Blue Box Group, we have the usual geek clubhouse toys — a MAME cabinet with 1200+ video games, ping-pong, a kegerator (with two varieties of beer!), and a rather nice billiards table, which is our primary obsession these days. Not content with the classic pool hall games of 8-ball, 9-ball, or cut-throat, we play a peculiar game invented by our Principal Technologist we call “Calvin Pool.” The rules are simple – after the break, the person whose turn it is has to attempt to simply hit whichever ball on the table their opponent chooses with the cue ball. There are a few wrinkles, naturally, but more or less the game boils down to “try to make the most difficult shot possible.”</p>

<p>I can’t even begin to tell you how much my game has improved in the last few weeks. I’m making shots that long stymied me, shots that intimidate and impress people who are occasional players of the game. The practice of setting myself up to fail and practicing the difficult, exploring the various possible approaches to seemingly impossible problems, has made me confident when dealing with the easy obstacles.</p>

<p>Similarly, when practicing programming, you need to challenge yourself to learn through exploration and trials, and accept that, as often as not, failure is going to be your ultimate outcome. If you’re not failing, you’re not practicing – you’re just warming up. So, how does someone practice the art and skill of programming? Here are a couple ideas.</p>

<h3>Limit yourself</h3>

<p>Decide for an afternoon, a day, or even a week, you’re going to use a technique you’re unfamiliar with. Make life hard for yourself on purpose.</p>

<ul>
<li>MONKEY PATCH ALL THE THINGS!</li>
<li>Make everything a gem</li>
<li>TDD the living snot out of the next bug you fix</li>
<li>Use an IDE you don’t normally use for a month</li>
<li>Don’t use the letter ‘G’</li>
<li>Make all actions happen through observers</li>
</ul>


<p>By forcing yourself to find new patterns to solve your problems, you’ll quickly run into the current limits of your knowledge and experience, and push out past them.</p>

<h3>Have some fun while doing something dumb!</h3>

<p>Extend your practice by choosing a simple problem and keep solving it in new ways. Each time, add complications and obstructions. Solve a problem over and over, with new obstacles. For instance, let’s take this User Story as a place to start:</p>

<p>“The user will be able to convert a temperature in Celsius to Fahrenheit, and vice versa.”</p>

<p>Simple enough. Five minutes (or less) of Googling will turn up a myriad of solutions, and give you the basic math. Start with making it a small command-line app – easy-peasy lemon-squeezy! Once that’s done (you did tests, too, right?), let’s mutate it and iterate:</p>

<ul>
<li>Make it a gem</li>
<li>Release it on Github</li>
<li>Make it a website</li>
<li>Make it a mix-in on Numeric</li>
<li>Make it a web service</li>
<li>Find other temperature scales you could convert to and from</li>
<li>Have it attempt to resolve the user’s location via browser location or IP address, and give automated temperature conversions</li>
<li>Have it query wikipedia (or other data source) to offer information about the resulting temperature – trivia, facts, elements that melt or ignite or freeze at that temp, etc</li>
<li>Have it record the average, median, and min/max the user has calculated, and say witty things as milestones are passed</li>
<li>…</li>
</ul>


<p>Practice doesn’t have to be about flash cards and rote memorization. Try a little learning-by-doing, by applying concepts and techniques you want to try to your daily workflow but haven’t found the time for. Get your hands dirty and stretch outside your comfort zone, and approach previously solved and well-understood problems from a fresh perspective, to truly discover the benefits (and drawbacks) of approaches you’re unfamiliar with.</p>
]]></content>
  </entry>
  
</feed>
